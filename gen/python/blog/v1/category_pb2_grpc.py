# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blog.v1 import category_pb2 as blog_dot_v1_dot_category__pb2


class CategoryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCategory = channel.unary_unary(
                '/blog.v1.CategoryService/CreateCategory',
                request_serializer=blog_dot_v1_dot_category__pb2.CreateCategoryRequest.SerializeToString,
                response_deserializer=blog_dot_v1_dot_category__pb2.CreateCategoryResponse.FromString,
                _registered_method=True)
        self.GetCategory = channel.unary_unary(
                '/blog.v1.CategoryService/GetCategory',
                request_serializer=blog_dot_v1_dot_category__pb2.GetCategoryRequest.SerializeToString,
                response_deserializer=blog_dot_v1_dot_category__pb2.GetCategoryResponse.FromString,
                _registered_method=True)
        self.ListCategory = channel.unary_unary(
                '/blog.v1.CategoryService/ListCategory',
                request_serializer=blog_dot_v1_dot_category__pb2.ListCategoryRequest.SerializeToString,
                response_deserializer=blog_dot_v1_dot_category__pb2.ListCategoryResponse.FromString,
                _registered_method=True)
        self.UpdateCategory = channel.unary_unary(
                '/blog.v1.CategoryService/UpdateCategory',
                request_serializer=blog_dot_v1_dot_category__pb2.UpdateCategoryRequest.SerializeToString,
                response_deserializer=blog_dot_v1_dot_category__pb2.UpdateCategoryResponse.FromString,
                _registered_method=True)
        self.DeleteCategory = channel.unary_unary(
                '/blog.v1.CategoryService/DeleteCategory',
                request_serializer=blog_dot_v1_dot_category__pb2.DeleteCategoryRequest.SerializeToString,
                response_deserializer=blog_dot_v1_dot_category__pb2.DeleteCategoryResponse.FromString,
                _registered_method=True)


class CategoryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCategory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CategoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCategory,
                    request_deserializer=blog_dot_v1_dot_category__pb2.CreateCategoryRequest.FromString,
                    response_serializer=blog_dot_v1_dot_category__pb2.CreateCategoryResponse.SerializeToString,
            ),
            'GetCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCategory,
                    request_deserializer=blog_dot_v1_dot_category__pb2.GetCategoryRequest.FromString,
                    response_serializer=blog_dot_v1_dot_category__pb2.GetCategoryResponse.SerializeToString,
            ),
            'ListCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCategory,
                    request_deserializer=blog_dot_v1_dot_category__pb2.ListCategoryRequest.FromString,
                    response_serializer=blog_dot_v1_dot_category__pb2.ListCategoryResponse.SerializeToString,
            ),
            'UpdateCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCategory,
                    request_deserializer=blog_dot_v1_dot_category__pb2.UpdateCategoryRequest.FromString,
                    response_serializer=blog_dot_v1_dot_category__pb2.UpdateCategoryResponse.SerializeToString,
            ),
            'DeleteCategory': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCategory,
                    request_deserializer=blog_dot_v1_dot_category__pb2.DeleteCategoryRequest.FromString,
                    response_serializer=blog_dot_v1_dot_category__pb2.DeleteCategoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blog.v1.CategoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('blog.v1.CategoryService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CategoryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.v1.CategoryService/CreateCategory',
            blog_dot_v1_dot_category__pb2.CreateCategoryRequest.SerializeToString,
            blog_dot_v1_dot_category__pb2.CreateCategoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.v1.CategoryService/GetCategory',
            blog_dot_v1_dot_category__pb2.GetCategoryRequest.SerializeToString,
            blog_dot_v1_dot_category__pb2.GetCategoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.v1.CategoryService/ListCategory',
            blog_dot_v1_dot_category__pb2.ListCategoryRequest.SerializeToString,
            blog_dot_v1_dot_category__pb2.ListCategoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.v1.CategoryService/UpdateCategory',
            blog_dot_v1_dot_category__pb2.UpdateCategoryRequest.SerializeToString,
            blog_dot_v1_dot_category__pb2.UpdateCategoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCategory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.v1.CategoryService/DeleteCategory',
            blog_dot_v1_dot_category__pb2.DeleteCategoryRequest.SerializeToString,
            blog_dot_v1_dot_category__pb2.DeleteCategoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
