# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blog.v1 import post_pb2 as blog_dot_v1_dot_post__pb2


class PostServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePost = channel.unary_unary(
                '/blog.v1.PostService/CreatePost',
                request_serializer=blog_dot_v1_dot_post__pb2.CreatePostRequest.SerializeToString,
                response_deserializer=blog_dot_v1_dot_post__pb2.CreatePostResponse.FromString,
                _registered_method=True)
        self.GetPostByID = channel.unary_unary(
                '/blog.v1.PostService/GetPostByID',
                request_serializer=blog_dot_v1_dot_post__pb2.GetPostByIDRequest.SerializeToString,
                response_deserializer=blog_dot_v1_dot_post__pb2.GetPostByIDResponse.FromString,
                _registered_method=True)
        self.ListPosts = channel.unary_unary(
                '/blog.v1.PostService/ListPosts',
                request_serializer=blog_dot_v1_dot_post__pb2.ListPostsRequest.SerializeToString,
                response_deserializer=blog_dot_v1_dot_post__pb2.ListPostsResponse.FromString,
                _registered_method=True)
        self.UpdatePost = channel.unary_unary(
                '/blog.v1.PostService/UpdatePost',
                request_serializer=blog_dot_v1_dot_post__pb2.UpdatePostRequest.SerializeToString,
                response_deserializer=blog_dot_v1_dot_post__pb2.UpdatePostResponse.FromString,
                _registered_method=True)
        self.DeletePost = channel.unary_unary(
                '/blog.v1.PostService/DeletePost',
                request_serializer=blog_dot_v1_dot_post__pb2.DeletePostRequest.SerializeToString,
                response_deserializer=blog_dot_v1_dot_post__pb2.DeletePostResponse.FromString,
                _registered_method=True)


class PostServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePost(self, request, context):
        """创建博客文章
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPostByID(self, request, context):
        """根据ID获取博客文章
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPosts(self, request, context):
        """列出所有博客文章
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePost(self, request, context):
        """更新博客文章
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePost(self, request, context):
        """删除博客文章
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PostServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePost': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePost,
                    request_deserializer=blog_dot_v1_dot_post__pb2.CreatePostRequest.FromString,
                    response_serializer=blog_dot_v1_dot_post__pb2.CreatePostResponse.SerializeToString,
            ),
            'GetPostByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPostByID,
                    request_deserializer=blog_dot_v1_dot_post__pb2.GetPostByIDRequest.FromString,
                    response_serializer=blog_dot_v1_dot_post__pb2.GetPostByIDResponse.SerializeToString,
            ),
            'ListPosts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPosts,
                    request_deserializer=blog_dot_v1_dot_post__pb2.ListPostsRequest.FromString,
                    response_serializer=blog_dot_v1_dot_post__pb2.ListPostsResponse.SerializeToString,
            ),
            'UpdatePost': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePost,
                    request_deserializer=blog_dot_v1_dot_post__pb2.UpdatePostRequest.FromString,
                    response_serializer=blog_dot_v1_dot_post__pb2.UpdatePostResponse.SerializeToString,
            ),
            'DeletePost': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePost,
                    request_deserializer=blog_dot_v1_dot_post__pb2.DeletePostRequest.FromString,
                    response_serializer=blog_dot_v1_dot_post__pb2.DeletePostResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blog.v1.PostService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('blog.v1.PostService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class PostService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.v1.PostService/CreatePost',
            blog_dot_v1_dot_post__pb2.CreatePostRequest.SerializeToString,
            blog_dot_v1_dot_post__pb2.CreatePostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPostByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.v1.PostService/GetPostByID',
            blog_dot_v1_dot_post__pb2.GetPostByIDRequest.SerializeToString,
            blog_dot_v1_dot_post__pb2.GetPostByIDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListPosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.v1.PostService/ListPosts',
            blog_dot_v1_dot_post__pb2.ListPostsRequest.SerializeToString,
            blog_dot_v1_dot_post__pb2.ListPostsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdatePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.v1.PostService/UpdatePost',
            blog_dot_v1_dot_post__pb2.UpdatePostRequest.SerializeToString,
            blog_dot_v1_dot_post__pb2.UpdatePostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.v1.PostService/DeletePost',
            blog_dot_v1_dot_post__pb2.DeletePostRequest.SerializeToString,
            blog_dot_v1_dot_post__pb2.DeletePostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
