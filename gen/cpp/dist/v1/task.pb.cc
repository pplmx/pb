// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dist/v1/task.proto
// Protobuf C++ Version: 5.29.0

#include "dist/v1/task.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dist {
namespace v1 {

inline constexpr WatchTasksRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_ids_{},
        node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WatchTasksRequest::WatchTasksRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchTasksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchTasksRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchTasksRequestDefaultTypeInternal() {}
  union {
    WatchTasksRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchTasksRequestDefaultTypeInternal _WatchTasksRequest_default_instance_;

inline constexpr SubmitTaskResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accepted_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SubmitTaskResponse::SubmitTaskResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitTaskResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitTaskResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitTaskResponseDefaultTypeInternal() {}
  union {
    SubmitTaskResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitTaskResponseDefaultTypeInternal _SubmitTaskResponse_default_instance_;

inline constexpr CancelTaskResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelTaskResponse::CancelTaskResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelTaskResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelTaskResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelTaskResponseDefaultTypeInternal() {}
  union {
    CancelTaskResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelTaskResponseDefaultTypeInternal _CancelTaskResponse_default_instance_;

inline constexpr CancelTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        requester_node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelTaskRequest::CancelTaskRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelTaskRequestDefaultTypeInternal() {}
  union {
    CancelTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelTaskRequestDefaultTypeInternal _CancelTaskRequest_default_instance_;

inline constexpr SubmitTaskRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        requester_node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SubmitTaskRequest::SubmitTaskRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubmitTaskRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubmitTaskRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubmitTaskRequestDefaultTypeInternal() {}
  union {
    SubmitTaskRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubmitTaskRequestDefaultTypeInternal _SubmitTaskRequest_default_instance_;

inline constexpr WatchTasksResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : event_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR WatchTasksResponse::WatchTasksResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchTasksResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchTasksResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchTasksResponseDefaultTypeInternal() {}
  union {
    WatchTasksResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchTasksResponseDefaultTypeInternal _WatchTasksResponse_default_instance_;
}  // namespace v1
}  // namespace dist
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_dist_2fv1_2ftask_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dist_2fv1_2ftask_2eproto = nullptr;
const ::uint32_t
    TableStruct_dist_2fv1_2ftask_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::dist::v1::SubmitTaskRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::SubmitTaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::SubmitTaskRequest, _impl_.task_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::SubmitTaskRequest, _impl_.requester_node_id_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::SubmitTaskResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::SubmitTaskResponse, _impl_.accepted_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::SubmitTaskResponse, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::SubmitTaskResponse, _impl_.error_message_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchTasksRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchTasksRequest, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchTasksRequest, _impl_.task_ids_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchTasksResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchTasksResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchTasksResponse, _impl_.event_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::CancelTaskRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::CancelTaskRequest, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::CancelTaskRequest, _impl_.requester_node_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::CancelTaskResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::CancelTaskResponse, _impl_.success_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::CancelTaskResponse, _impl_.error_message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::dist::v1::SubmitTaskRequest)},
        {12, -1, -1, sizeof(::dist::v1::SubmitTaskResponse)},
        {23, -1, -1, sizeof(::dist::v1::WatchTasksRequest)},
        {33, -1, -1, sizeof(::dist::v1::WatchTasksResponse)},
        {44, -1, -1, sizeof(::dist::v1::CancelTaskRequest)},
        {54, -1, -1, sizeof(::dist::v1::CancelTaskResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::dist::v1::_SubmitTaskRequest_default_instance_._instance,
    &::dist::v1::_SubmitTaskResponse_default_instance_._instance,
    &::dist::v1::_WatchTasksRequest_default_instance_._instance,
    &::dist::v1::_WatchTasksResponse_default_instance_._instance,
    &::dist::v1::_CancelTaskRequest_default_instance_._instance,
    &::dist::v1::_CancelTaskResponse_default_instance_._instance,
};
const char descriptor_table_protodef_dist_2fv1_2ftask_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022dist/v1/task.proto\022\007dist.v1\032\024dist/v1/c"
    "ommon.proto\"b\n\021SubmitTaskRequest\022!\n\004task"
    "\030\001 \001(\0132\r.dist.v1.TaskR\004task\022*\n\021requester"
    "_node_id\030\002 \001(\tR\017requesterNodeId\"n\n\022Submi"
    "tTaskResponse\022\032\n\010accepted\030\001 \001(\010R\010accepte"
    "d\022\027\n\007task_id\030\002 \001(\tR\006taskId\022#\n\rerror_mess"
    "age\030\003 \001(\tR\014errorMessage\"G\n\021WatchTasksReq"
    "uest\022\027\n\007node_id\030\001 \001(\tR\006nodeId\022\031\n\010task_id"
    "s\030\002 \003(\tR\007taskIds\"\266\001\n\022WatchTasksResponse\022"
    "N\n\022task_status_change\030\001 \001(\0132\036.dist.v1.Ta"
    "skStatusChangeEventH\000R\020taskStatusChange\022"
    "G\n\017task_assignment\030\002 \001(\0132\034.dist.v1.TaskA"
    "ssignmentEventH\000R\016taskAssignmentB\007\n\005even"
    "t\"X\n\021CancelTaskRequest\022\027\n\007task_id\030\001 \001(\tR"
    "\006taskId\022*\n\021requester_node_id\030\002 \001(\tR\017requ"
    "esterNodeId\"S\n\022CancelTaskResponse\022\030\n\007suc"
    "cess\030\001 \001(\010R\007success\022#\n\rerror_message\030\002 \001"
    "(\tR\014errorMessage2\365\001\n\026DistributedTaskServ"
    "ice\022G\n\nSubmitTask\022\032.dist.v1.SubmitTaskRe"
    "quest\032\033.dist.v1.SubmitTaskResponse\"\000\022I\n\n"
    "WatchTasks\022\032.dist.v1.WatchTasksRequest\032\033"
    ".dist.v1.WatchTasksResponse\"\0000\001\022G\n\nCance"
    "lTask\022\032.dist.v1.CancelTaskRequest\032\033.dist"
    ".v1.CancelTaskResponse\"\000By\n\013com.dist.v1B"
    "\tTaskProtoP\001Z\"github.com/pplmx/pb/dist/v"
    "1;distv1\242\002\003DXX\252\002\007Dist.V1\312\002\007Dist\\V1\342\002\023Dis"
    "t\\V1\\GPBMetadata\352\002\010Dist::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_dist_2fv1_2ftask_2eproto_deps[1] =
    {
        &::descriptor_table_dist_2fv1_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_dist_2fv1_2ftask_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_dist_2fv1_2ftask_2eproto = {
    false,
    false,
    1075,
    descriptor_table_protodef_dist_2fv1_2ftask_2eproto,
    "dist/v1/task.proto",
    &descriptor_table_dist_2fv1_2ftask_2eproto_once,
    descriptor_table_dist_2fv1_2ftask_2eproto_deps,
    1,
    6,
    schemas,
    file_default_instances,
    TableStruct_dist_2fv1_2ftask_2eproto::offsets,
    file_level_enum_descriptors_dist_2fv1_2ftask_2eproto,
    file_level_service_descriptors_dist_2fv1_2ftask_2eproto,
};
namespace dist {
namespace v1 {
// ===================================================================

class SubmitTaskRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SubmitTaskRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubmitTaskRequest, _impl_._has_bits_);
};

void SubmitTaskRequest::clear_task() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.task_ != nullptr) _impl_.task_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SubmitTaskRequest::SubmitTaskRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.SubmitTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::SubmitTaskRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        requester_node_id_(arena, from.requester_node_id_) {}

SubmitTaskRequest::SubmitTaskRequest(
    ::google::protobuf::Arena* arena,
    const SubmitTaskRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitTaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::dist::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:dist.v1.SubmitTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE SubmitTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        requester_node_id_(arena) {}

inline void SubmitTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
SubmitTaskRequest::~SubmitTaskRequest() {
  // @@protoc_insertion_point(destructor:dist.v1.SubmitTaskRequest)
  SharedDtor(*this);
}
inline void SubmitTaskRequest::SharedDtor(MessageLite& self) {
  SubmitTaskRequest& this_ = static_cast<SubmitTaskRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.requester_node_id_.Destroy();
  delete this_._impl_.task_;
  this_._impl_.~Impl_();
}

inline void* SubmitTaskRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubmitTaskRequest(arena);
}
constexpr auto SubmitTaskRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubmitTaskRequest),
                                            alignof(SubmitTaskRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubmitTaskRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubmitTaskRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubmitTaskRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubmitTaskRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubmitTaskRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubmitTaskRequest>(), &SubmitTaskRequest::ByteSizeLong,
            &SubmitTaskRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubmitTaskRequest, _impl_._cached_size_),
        false,
    },
    &SubmitTaskRequest::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2ftask_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubmitTaskRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 51, 2> SubmitTaskRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubmitTaskRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::SubmitTaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string requester_node_id = 2 [json_name = "requesterNodeId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitTaskRequest, _impl_.requester_node_id_)}},
    // .dist.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubmitTaskRequest, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dist.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(SubmitTaskRequest, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string requester_node_id = 2 [json_name = "requesterNodeId"];
    {PROTOBUF_FIELD_OFFSET(SubmitTaskRequest, _impl_.requester_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dist::v1::Task>()},
  }}, {{
    "\31\0\21\0\0\0\0\0"
    "dist.v1.SubmitTaskRequest"
    "requester_node_id"
  }},
};

PROTOBUF_NOINLINE void SubmitTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.SubmitTaskRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requester_node_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubmitTaskRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubmitTaskRequest& this_ = static_cast<const SubmitTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubmitTaskRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubmitTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.SubmitTaskRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .dist.v1.Task task = 1 [json_name = "task"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.task_, this_._impl_.task_->GetCachedSize(), target,
                stream);
          }

          // string requester_node_id = 2 [json_name = "requesterNodeId"];
          if (!this_._internal_requester_node_id().empty()) {
            const std::string& _s = this_._internal_requester_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.SubmitTaskRequest.requester_node_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.SubmitTaskRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubmitTaskRequest::ByteSizeLong(const MessageLite& base) {
          const SubmitTaskRequest& this_ = static_cast<const SubmitTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubmitTaskRequest::ByteSizeLong() const {
          const SubmitTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.SubmitTaskRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string requester_node_id = 2 [json_name = "requesterNodeId"];
            if (!this_._internal_requester_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_requester_node_id());
            }
          }
           {
            // .dist.v1.Task task = 1 [json_name = "task"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubmitTaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitTaskRequest*>(&to_msg);
  auto& from = static_cast<const SubmitTaskRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.SubmitTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_requester_node_id().empty()) {
    _this->_internal_set_requester_node_id(from._internal_requester_node_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::dist::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitTaskRequest::CopyFrom(const SubmitTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.SubmitTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitTaskRequest::InternalSwap(SubmitTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.requester_node_id_, &other->_impl_.requester_node_id_, arena);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata SubmitTaskRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubmitTaskResponse::_Internal {
 public:
};

SubmitTaskResponse::SubmitTaskResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.SubmitTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubmitTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::SubmitTaskResponse& from_msg)
      : task_id_(arena, from.task_id_),
        error_message_(arena, from.error_message_),
        _cached_size_{0} {}

SubmitTaskResponse::SubmitTaskResponse(
    ::google::protobuf::Arena* arena,
    const SubmitTaskResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubmitTaskResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.accepted_ = from._impl_.accepted_;

  // @@protoc_insertion_point(copy_constructor:dist.v1.SubmitTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE SubmitTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        error_message_(arena),
        _cached_size_{0} {}

inline void SubmitTaskResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accepted_ = {};
}
SubmitTaskResponse::~SubmitTaskResponse() {
  // @@protoc_insertion_point(destructor:dist.v1.SubmitTaskResponse)
  SharedDtor(*this);
}
inline void SubmitTaskResponse::SharedDtor(MessageLite& self) {
  SubmitTaskResponse& this_ = static_cast<SubmitTaskResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SubmitTaskResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SubmitTaskResponse(arena);
}
constexpr auto SubmitTaskResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubmitTaskResponse),
                                            alignof(SubmitTaskResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SubmitTaskResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SubmitTaskResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SubmitTaskResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SubmitTaskResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SubmitTaskResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SubmitTaskResponse>(), &SubmitTaskResponse::ByteSizeLong,
            &SubmitTaskResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SubmitTaskResponse, _impl_._cached_size_),
        false,
    },
    &SubmitTaskResponse::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2ftask_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SubmitTaskResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 55, 2> SubmitTaskResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::SubmitTaskResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool accepted = 1 [json_name = "accepted"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubmitTaskResponse, _impl_.accepted_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitTaskResponse, _impl_.accepted_)}},
    // string task_id = 2 [json_name = "taskId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitTaskResponse, _impl_.task_id_)}},
    // string error_message = 3 [json_name = "errorMessage"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SubmitTaskResponse, _impl_.error_message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool accepted = 1 [json_name = "accepted"];
    {PROTOBUF_FIELD_OFFSET(SubmitTaskResponse, _impl_.accepted_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string task_id = 2 [json_name = "taskId"];
    {PROTOBUF_FIELD_OFFSET(SubmitTaskResponse, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string error_message = 3 [json_name = "errorMessage"];
    {PROTOBUF_FIELD_OFFSET(SubmitTaskResponse, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\7\15\0\0\0\0"
    "dist.v1.SubmitTaskResponse"
    "task_id"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void SubmitTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.SubmitTaskResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.accepted_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SubmitTaskResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SubmitTaskResponse& this_ = static_cast<const SubmitTaskResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SubmitTaskResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SubmitTaskResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.SubmitTaskResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool accepted = 1 [json_name = "accepted"];
          if (this_._internal_accepted() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_accepted(), target);
          }

          // string task_id = 2 [json_name = "taskId"];
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.SubmitTaskResponse.task_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string error_message = 3 [json_name = "errorMessage"];
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.SubmitTaskResponse.error_message");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.SubmitTaskResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SubmitTaskResponse::ByteSizeLong(const MessageLite& base) {
          const SubmitTaskResponse& this_ = static_cast<const SubmitTaskResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SubmitTaskResponse::ByteSizeLong() const {
          const SubmitTaskResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.SubmitTaskResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string task_id = 2 [json_name = "taskId"];
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
            // string error_message = 3 [json_name = "errorMessage"];
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // bool accepted = 1 [json_name = "accepted"];
            if (this_._internal_accepted() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SubmitTaskResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubmitTaskResponse*>(&to_msg);
  auto& from = static_cast<const SubmitTaskResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.SubmitTaskResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_accepted() != 0) {
    _this->_impl_.accepted_ = from._impl_.accepted_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubmitTaskResponse::CopyFrom(const SubmitTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.SubmitTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubmitTaskResponse::InternalSwap(SubmitTaskResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.accepted_, other->_impl_.accepted_);
}

::google::protobuf::Metadata SubmitTaskResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchTasksRequest::_Internal {
 public:
};

WatchTasksRequest::WatchTasksRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.WatchTasksRequest)
}
inline PROTOBUF_NDEBUG_INLINE WatchTasksRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::WatchTasksRequest& from_msg)
      : task_ids_{visibility, arena, from.task_ids_},
        node_id_(arena, from.node_id_),
        _cached_size_{0} {}

WatchTasksRequest::WatchTasksRequest(
    ::google::protobuf::Arena* arena,
    const WatchTasksRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchTasksRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dist.v1.WatchTasksRequest)
}
inline PROTOBUF_NDEBUG_INLINE WatchTasksRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_ids_{visibility, arena},
        node_id_(arena),
        _cached_size_{0} {}

inline void WatchTasksRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WatchTasksRequest::~WatchTasksRequest() {
  // @@protoc_insertion_point(destructor:dist.v1.WatchTasksRequest)
  SharedDtor(*this);
}
inline void WatchTasksRequest::SharedDtor(MessageLite& self) {
  WatchTasksRequest& this_ = static_cast<WatchTasksRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* WatchTasksRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WatchTasksRequest(arena);
}
constexpr auto WatchTasksRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(WatchTasksRequest, _impl_.task_ids_) +
          decltype(WatchTasksRequest::_impl_.task_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(WatchTasksRequest), alignof(WatchTasksRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&WatchTasksRequest::PlacementNew_,
                                 sizeof(WatchTasksRequest),
                                 alignof(WatchTasksRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WatchTasksRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WatchTasksRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WatchTasksRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WatchTasksRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WatchTasksRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WatchTasksRequest>(), &WatchTasksRequest::ByteSizeLong,
            &WatchTasksRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WatchTasksRequest, _impl_._cached_size_),
        false,
    },
    &WatchTasksRequest::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2ftask_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WatchTasksRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> WatchTasksRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::WatchTasksRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string task_ids = 2 [json_name = "taskIds"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WatchTasksRequest, _impl_.task_ids_)}},
    // string node_id = 1 [json_name = "nodeId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WatchTasksRequest, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node_id = 1 [json_name = "nodeId"];
    {PROTOBUF_FIELD_OFFSET(WatchTasksRequest, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string task_ids = 2 [json_name = "taskIds"];
    {PROTOBUF_FIELD_OFFSET(WatchTasksRequest, _impl_.task_ids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\31\7\10\0\0\0\0\0"
    "dist.v1.WatchTasksRequest"
    "node_id"
    "task_ids"
  }},
};

PROTOBUF_NOINLINE void WatchTasksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.WatchTasksRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_ids_.Clear();
  _impl_.node_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WatchTasksRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WatchTasksRequest& this_ = static_cast<const WatchTasksRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WatchTasksRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WatchTasksRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.WatchTasksRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node_id = 1 [json_name = "nodeId"];
          if (!this_._internal_node_id().empty()) {
            const std::string& _s = this_._internal_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.WatchTasksRequest.node_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string task_ids = 2 [json_name = "taskIds"];
          for (int i = 0, n = this_._internal_task_ids_size(); i < n; ++i) {
            const auto& s = this_._internal_task_ids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.WatchTasksRequest.task_ids");
            target = stream->WriteString(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.WatchTasksRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WatchTasksRequest::ByteSizeLong(const MessageLite& base) {
          const WatchTasksRequest& this_ = static_cast<const WatchTasksRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WatchTasksRequest::ByteSizeLong() const {
          const WatchTasksRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.WatchTasksRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string task_ids = 2 [json_name = "taskIds"];
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_task_ids().size());
              for (int i = 0, n = this_._internal_task_ids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_task_ids().Get(i));
              }
            }
          }
           {
            // string node_id = 1 [json_name = "nodeId"];
            if (!this_._internal_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WatchTasksRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchTasksRequest*>(&to_msg);
  auto& from = static_cast<const WatchTasksRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.WatchTasksRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_task_ids()->MergeFrom(from._internal_task_ids());
  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchTasksRequest::CopyFrom(const WatchTasksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.WatchTasksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchTasksRequest::InternalSwap(WatchTasksRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.task_ids_.InternalSwap(&other->_impl_.task_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
}

::google::protobuf::Metadata WatchTasksRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchTasksResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dist::v1::WatchTasksResponse, _impl_._oneof_case_);
};

void WatchTasksResponse::set_allocated_task_status_change(::dist::v1::TaskStatusChangeEvent* task_status_change) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_event();
  if (task_status_change) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(task_status_change)->GetArena();
    if (message_arena != submessage_arena) {
      task_status_change = ::google::protobuf::internal::GetOwnedMessage(message_arena, task_status_change, submessage_arena);
    }
    set_has_task_status_change();
    _impl_.event_.task_status_change_ = task_status_change;
  }
  // @@protoc_insertion_point(field_set_allocated:dist.v1.WatchTasksResponse.task_status_change)
}
void WatchTasksResponse::clear_task_status_change() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kTaskStatusChange) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.task_status_change_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.task_status_change_);
    }
    clear_has_event();
  }
}
void WatchTasksResponse::set_allocated_task_assignment(::dist::v1::TaskAssignmentEvent* task_assignment) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_event();
  if (task_assignment) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(task_assignment)->GetArena();
    if (message_arena != submessage_arena) {
      task_assignment = ::google::protobuf::internal::GetOwnedMessage(message_arena, task_assignment, submessage_arena);
    }
    set_has_task_assignment();
    _impl_.event_.task_assignment_ = task_assignment;
  }
  // @@protoc_insertion_point(field_set_allocated:dist.v1.WatchTasksResponse.task_assignment)
}
void WatchTasksResponse::clear_task_assignment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kTaskAssignment) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.task_assignment_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.task_assignment_);
    }
    clear_has_event();
  }
}
WatchTasksResponse::WatchTasksResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.WatchTasksResponse)
}
inline PROTOBUF_NDEBUG_INLINE WatchTasksResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::WatchTasksResponse& from_msg)
      : event_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

WatchTasksResponse::WatchTasksResponse(
    ::google::protobuf::Arena* arena,
    const WatchTasksResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchTasksResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (event_case()) {
    case EVENT_NOT_SET:
      break;
      case kTaskStatusChange:
        _impl_.event_.task_status_change_ = ::google::protobuf::Message::CopyConstruct<::dist::v1::TaskStatusChangeEvent>(arena, *from._impl_.event_.task_status_change_);
        break;
      case kTaskAssignment:
        _impl_.event_.task_assignment_ = ::google::protobuf::Message::CopyConstruct<::dist::v1::TaskAssignmentEvent>(arena, *from._impl_.event_.task_assignment_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dist.v1.WatchTasksResponse)
}
inline PROTOBUF_NDEBUG_INLINE WatchTasksResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : event_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void WatchTasksResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WatchTasksResponse::~WatchTasksResponse() {
  // @@protoc_insertion_point(destructor:dist.v1.WatchTasksResponse)
  SharedDtor(*this);
}
inline void WatchTasksResponse::SharedDtor(MessageLite& self) {
  WatchTasksResponse& this_ = static_cast<WatchTasksResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_event()) {
    this_.clear_event();
  }
  this_._impl_.~Impl_();
}

void WatchTasksResponse::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:dist.v1.WatchTasksResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (event_case()) {
    case kTaskStatusChange: {
      if (GetArena() == nullptr) {
        delete _impl_.event_.task_status_change_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.task_status_change_);
      }
      break;
    }
    case kTaskAssignment: {
      if (GetArena() == nullptr) {
        delete _impl_.event_.task_assignment_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.task_assignment_);
      }
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EVENT_NOT_SET;
}


inline void* WatchTasksResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WatchTasksResponse(arena);
}
constexpr auto WatchTasksResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WatchTasksResponse),
                                            alignof(WatchTasksResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WatchTasksResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WatchTasksResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WatchTasksResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WatchTasksResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WatchTasksResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WatchTasksResponse>(), &WatchTasksResponse::ByteSizeLong,
            &WatchTasksResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WatchTasksResponse, _impl_._cached_size_),
        false,
    },
    &WatchTasksResponse::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2ftask_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WatchTasksResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> WatchTasksResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::WatchTasksResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dist.v1.TaskStatusChangeEvent task_status_change = 1 [json_name = "taskStatusChange"];
    {PROTOBUF_FIELD_OFFSET(WatchTasksResponse, _impl_.event_.task_status_change_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dist.v1.TaskAssignmentEvent task_assignment = 2 [json_name = "taskAssignment"];
    {PROTOBUF_FIELD_OFFSET(WatchTasksResponse, _impl_.event_.task_assignment_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dist::v1::TaskStatusChangeEvent>()},
    {::_pbi::TcParser::GetTable<::dist::v1::TaskAssignmentEvent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void WatchTasksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.WatchTasksResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_event();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WatchTasksResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WatchTasksResponse& this_ = static_cast<const WatchTasksResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WatchTasksResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WatchTasksResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.WatchTasksResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.event_case()) {
            case kTaskStatusChange: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.event_.task_status_change_, this_._impl_.event_.task_status_change_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kTaskAssignment: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.event_.task_assignment_, this_._impl_.event_.task_assignment_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.WatchTasksResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WatchTasksResponse::ByteSizeLong(const MessageLite& base) {
          const WatchTasksResponse& this_ = static_cast<const WatchTasksResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WatchTasksResponse::ByteSizeLong() const {
          const WatchTasksResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.WatchTasksResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.event_case()) {
            // .dist.v1.TaskStatusChangeEvent task_status_change = 1 [json_name = "taskStatusChange"];
            case kTaskStatusChange: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.event_.task_status_change_);
              break;
            }
            // .dist.v1.TaskAssignmentEvent task_assignment = 2 [json_name = "taskAssignment"];
            case kTaskAssignment: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.event_.task_assignment_);
              break;
            }
            case EVENT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WatchTasksResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchTasksResponse*>(&to_msg);
  auto& from = static_cast<const WatchTasksResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.WatchTasksResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_event();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTaskStatusChange: {
        if (oneof_needs_init) {
          _this->_impl_.event_.task_status_change_ =
              ::google::protobuf::Message::CopyConstruct<::dist::v1::TaskStatusChangeEvent>(arena, *from._impl_.event_.task_status_change_);
        } else {
          _this->_impl_.event_.task_status_change_->MergeFrom(from._internal_task_status_change());
        }
        break;
      }
      case kTaskAssignment: {
        if (oneof_needs_init) {
          _this->_impl_.event_.task_assignment_ =
              ::google::protobuf::Message::CopyConstruct<::dist::v1::TaskAssignmentEvent>(arena, *from._impl_.event_.task_assignment_);
        } else {
          _this->_impl_.event_.task_assignment_->MergeFrom(from._internal_task_assignment());
        }
        break;
      }
      case EVENT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchTasksResponse::CopyFrom(const WatchTasksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.WatchTasksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchTasksResponse::InternalSwap(WatchTasksResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.event_, other->_impl_.event_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata WatchTasksResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelTaskRequest::_Internal {
 public:
};

CancelTaskRequest::CancelTaskRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.CancelTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::CancelTaskRequest& from_msg)
      : task_id_(arena, from.task_id_),
        requester_node_id_(arena, from.requester_node_id_),
        _cached_size_{0} {}

CancelTaskRequest::CancelTaskRequest(
    ::google::protobuf::Arena* arena,
    const CancelTaskRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelTaskRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dist.v1.CancelTaskRequest)
}
inline PROTOBUF_NDEBUG_INLINE CancelTaskRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_id_(arena),
        requester_node_id_(arena),
        _cached_size_{0} {}

inline void CancelTaskRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CancelTaskRequest::~CancelTaskRequest() {
  // @@protoc_insertion_point(destructor:dist.v1.CancelTaskRequest)
  SharedDtor(*this);
}
inline void CancelTaskRequest::SharedDtor(MessageLite& self) {
  CancelTaskRequest& this_ = static_cast<CancelTaskRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.task_id_.Destroy();
  this_._impl_.requester_node_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CancelTaskRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelTaskRequest(arena);
}
constexpr auto CancelTaskRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CancelTaskRequest),
                                            alignof(CancelTaskRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelTaskRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelTaskRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelTaskRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelTaskRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelTaskRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelTaskRequest>(), &CancelTaskRequest::ByteSizeLong,
            &CancelTaskRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelTaskRequest, _impl_._cached_size_),
        false,
    },
    &CancelTaskRequest::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2ftask_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelTaskRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> CancelTaskRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::CancelTaskRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string requester_node_id = 2 [json_name = "requesterNodeId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CancelTaskRequest, _impl_.requester_node_id_)}},
    // string task_id = 1 [json_name = "taskId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CancelTaskRequest, _impl_.task_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1 [json_name = "taskId"];
    {PROTOBUF_FIELD_OFFSET(CancelTaskRequest, _impl_.task_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string requester_node_id = 2 [json_name = "requesterNodeId"];
    {PROTOBUF_FIELD_OFFSET(CancelTaskRequest, _impl_.requester_node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\7\21\0\0\0\0\0"
    "dist.v1.CancelTaskRequest"
    "task_id"
    "requester_node_id"
  }},
};

PROTOBUF_NOINLINE void CancelTaskRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.CancelTaskRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _impl_.requester_node_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelTaskRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelTaskRequest& this_ = static_cast<const CancelTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelTaskRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.CancelTaskRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1 [json_name = "taskId"];
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.CancelTaskRequest.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string requester_node_id = 2 [json_name = "requesterNodeId"];
          if (!this_._internal_requester_node_id().empty()) {
            const std::string& _s = this_._internal_requester_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.CancelTaskRequest.requester_node_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.CancelTaskRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelTaskRequest::ByteSizeLong(const MessageLite& base) {
          const CancelTaskRequest& this_ = static_cast<const CancelTaskRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelTaskRequest::ByteSizeLong() const {
          const CancelTaskRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.CancelTaskRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string task_id = 1 [json_name = "taskId"];
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
            // string requester_node_id = 2 [json_name = "requesterNodeId"];
            if (!this_._internal_requester_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_requester_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelTaskRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelTaskRequest*>(&to_msg);
  auto& from = static_cast<const CancelTaskRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.CancelTaskRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_requester_node_id().empty()) {
    _this->_internal_set_requester_node_id(from._internal_requester_node_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelTaskRequest::CopyFrom(const CancelTaskRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.CancelTaskRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelTaskRequest::InternalSwap(CancelTaskRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.requester_node_id_, &other->_impl_.requester_node_id_, arena);
}

::google::protobuf::Metadata CancelTaskRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelTaskResponse::_Internal {
 public:
};

CancelTaskResponse::CancelTaskResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.CancelTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE CancelTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::CancelTaskResponse& from_msg)
      : error_message_(arena, from.error_message_),
        _cached_size_{0} {}

CancelTaskResponse::CancelTaskResponse(
    ::google::protobuf::Arena* arena,
    const CancelTaskResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CancelTaskResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:dist.v1.CancelTaskResponse)
}
inline PROTOBUF_NDEBUG_INLINE CancelTaskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        _cached_size_{0} {}

inline void CancelTaskResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
CancelTaskResponse::~CancelTaskResponse() {
  // @@protoc_insertion_point(destructor:dist.v1.CancelTaskResponse)
  SharedDtor(*this);
}
inline void CancelTaskResponse::SharedDtor(MessageLite& self) {
  CancelTaskResponse& this_ = static_cast<CancelTaskResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* CancelTaskResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) CancelTaskResponse(arena);
}
constexpr auto CancelTaskResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CancelTaskResponse),
                                            alignof(CancelTaskResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull CancelTaskResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_CancelTaskResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &CancelTaskResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<CancelTaskResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &CancelTaskResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<CancelTaskResponse>(), &CancelTaskResponse::ByteSizeLong,
            &CancelTaskResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(CancelTaskResponse, _impl_._cached_size_),
        false,
    },
    &CancelTaskResponse::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2ftask_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* CancelTaskResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> CancelTaskResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::CancelTaskResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_message = 2 [json_name = "errorMessage"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CancelTaskResponse, _impl_.error_message_)}},
    // bool success = 1 [json_name = "success"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CancelTaskResponse, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CancelTaskResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1 [json_name = "success"];
    {PROTOBUF_FIELD_OFFSET(CancelTaskResponse, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string error_message = 2 [json_name = "errorMessage"];
    {PROTOBUF_FIELD_OFFSET(CancelTaskResponse, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\15\0\0\0\0\0"
    "dist.v1.CancelTaskResponse"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void CancelTaskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.CancelTaskResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* CancelTaskResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const CancelTaskResponse& this_ = static_cast<const CancelTaskResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* CancelTaskResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const CancelTaskResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.CancelTaskResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool success = 1 [json_name = "success"];
          if (this_._internal_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_success(), target);
          }

          // string error_message = 2 [json_name = "errorMessage"];
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.CancelTaskResponse.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.CancelTaskResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t CancelTaskResponse::ByteSizeLong(const MessageLite& base) {
          const CancelTaskResponse& this_ = static_cast<const CancelTaskResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t CancelTaskResponse::ByteSizeLong() const {
          const CancelTaskResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.CancelTaskResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2 [json_name = "errorMessage"];
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // bool success = 1 [json_name = "success"];
            if (this_._internal_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void CancelTaskResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelTaskResponse*>(&to_msg);
  auto& from = static_cast<const CancelTaskResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.CancelTaskResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_impl_.success_ = from._impl_.success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelTaskResponse::CopyFrom(const CancelTaskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.CancelTaskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelTaskResponse::InternalSwap(CancelTaskResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata CancelTaskResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace dist
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_dist_2fv1_2ftask_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
