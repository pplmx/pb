// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dist/v1/dist.proto
// Protobuf C++ Version: 5.29.0

#include "dist/v1/dist.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dist {
namespace v1 {

inline constexpr WatchDistRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WatchDistRequest::WatchDistRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchDistRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchDistRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchDistRequestDefaultTypeInternal() {}
  union {
    WatchDistRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchDistRequestDefaultTypeInternal _WatchDistRequest_default_instance_;

inline constexpr Task::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Task::Task(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskDefaultTypeInternal() {}
  union {
    Task _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskDefaultTypeInternal _Task_default_instance_;

inline constexpr ScheduleTaskEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ScheduleTaskEvent::ScheduleTaskEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ScheduleTaskEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ScheduleTaskEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ScheduleTaskEventDefaultTypeInternal() {}
  union {
    ScheduleTaskEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ScheduleTaskEventDefaultTypeInternal _ScheduleTaskEvent_default_instance_;

inline constexpr WatchDistResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : event_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR WatchDistResponse::WatchDistResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchDistResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchDistResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchDistResponseDefaultTypeInternal() {}
  union {
    WatchDistResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchDistResponseDefaultTypeInternal _WatchDistResponse_default_instance_;
}  // namespace v1
}  // namespace dist
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_dist_2fv1_2fdist_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dist_2fv1_2fdist_2eproto = nullptr;
const ::uint32_t
    TableStruct_dist_2fv1_2fdist_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::Task, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::Task, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::Task, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::Task, _impl_.type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchDistRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchDistRequest, _impl_.node_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchDistResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchDistResponse, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::dist::v1::WatchDistResponse, _impl_.event_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::ScheduleTaskEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::ScheduleTaskEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::ScheduleTaskEvent, _impl_.task_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::dist::v1::Task)},
        {11, -1, -1, sizeof(::dist::v1::WatchDistRequest)},
        {20, -1, -1, sizeof(::dist::v1::WatchDistResponse)},
        {30, 39, -1, sizeof(::dist::v1::ScheduleTaskEvent)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::dist::v1::_Task_default_instance_._instance,
    &::dist::v1::_WatchDistRequest_default_instance_._instance,
    &::dist::v1::_WatchDistResponse_default_instance_._instance,
    &::dist::v1::_ScheduleTaskEvent_default_instance_._instance,
};
const char descriptor_table_protodef_dist_2fv1_2fdist_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\022dist/v1/dist.proto\022\007dist.v1\">\n\004Task\022\016\n"
    "\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022\022\n\004typ"
    "e\030\003 \001(\tR\004type\"+\n\020WatchDistRequest\022\027\n\007nod"
    "e_id\030\001 \001(\tR\006nodeId\"N\n\021WatchDistResponse\022"
    "0\n\004task\030\001 \001(\0132\032.dist.v1.ScheduleTaskEven"
    "tH\000R\004taskB\007\n\005event\"6\n\021ScheduleTaskEvent\022"
    "!\n\004task\030\001 \001(\0132\r.dist.v1.TaskR\004task2U\n\013Di"
    "stService\022F\n\tWatchDist\022\031.dist.v1.WatchDi"
    "stRequest\032\032.dist.v1.WatchDistResponse\"\0000"
    "\001By\n\013com.dist.v1B\tDistProtoP\001Z\"github.co"
    "m/pplmx/pb/dist/v1;distv1\242\002\003DXX\252\002\007Dist.V"
    "1\312\002\007Dist\\V1\342\002\023Dist\\V1\\GPBMetadata\352\002\010Dist"
    "::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_dist_2fv1_2fdist_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_dist_2fv1_2fdist_2eproto = {
    false,
    false,
    492,
    descriptor_table_protodef_dist_2fv1_2fdist_2eproto,
    "dist/v1/dist.proto",
    &descriptor_table_dist_2fv1_2fdist_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_dist_2fv1_2fdist_2eproto::offsets,
    file_level_enum_descriptors_dist_2fv1_2fdist_2eproto,
    file_level_service_descriptors_dist_2fv1_2fdist_2eproto,
};
namespace dist {
namespace v1 {
// ===================================================================

class Task::_Internal {
 public:
};

Task::Task(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.Task)
}
inline PROTOBUF_NDEBUG_INLINE Task::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::Task& from_msg)
      : id_(arena, from.id_),
        name_(arena, from.name_),
        type_(arena, from.type_),
        _cached_size_{0} {}

Task::Task(
    ::google::protobuf::Arena* arena,
    const Task& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Task* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dist.v1.Task)
}
inline PROTOBUF_NDEBUG_INLINE Task::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        name_(arena),
        type_(arena),
        _cached_size_{0} {}

inline void Task::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Task::~Task() {
  // @@protoc_insertion_point(destructor:dist.v1.Task)
  SharedDtor(*this);
}
inline void Task::SharedDtor(MessageLite& self) {
  Task& this_ = static_cast<Task&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Task::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Task(arena);
}
constexpr auto Task::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Task),
                                            alignof(Task));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Task::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Task_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Task::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Task>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Task::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Task>(), &Task::ByteSizeLong,
            &Task::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Task, _impl_._cached_size_),
        false,
    },
    &Task::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2fdist_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Task::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 31, 2> Task::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::Task>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.name_)}},
    // string type = 3 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 3 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\2\4\4\0\0\0\0"
    "dist.v1.Task"
    "id"
    "name"
    "type"
  }},
};

PROTOBUF_NOINLINE void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.Task)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Task::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Task& this_ = static_cast<const Task&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Task::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Task& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.Task)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.Task.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.Task.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string type = 3 [json_name = "type"];
          if (!this_._internal_type().empty()) {
            const std::string& _s = this_._internal_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.Task.type");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.Task)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Task::ByteSizeLong(const MessageLite& base) {
          const Task& this_ = static_cast<const Task&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Task::ByteSizeLong() const {
          const Task& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.Task)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string name = 2 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string type = 3 [json_name = "type"];
            if (!this_._internal_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Task::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Task*>(&to_msg);
  auto& from = static_cast<const Task&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.Task)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Task::InternalSwap(Task* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
}

::google::protobuf::Metadata Task::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchDistRequest::_Internal {
 public:
};

WatchDistRequest::WatchDistRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.WatchDistRequest)
}
inline PROTOBUF_NDEBUG_INLINE WatchDistRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::WatchDistRequest& from_msg)
      : node_id_(arena, from.node_id_),
        _cached_size_{0} {}

WatchDistRequest::WatchDistRequest(
    ::google::protobuf::Arena* arena,
    const WatchDistRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchDistRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dist.v1.WatchDistRequest)
}
inline PROTOBUF_NDEBUG_INLINE WatchDistRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_id_(arena),
        _cached_size_{0} {}

inline void WatchDistRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WatchDistRequest::~WatchDistRequest() {
  // @@protoc_insertion_point(destructor:dist.v1.WatchDistRequest)
  SharedDtor(*this);
}
inline void WatchDistRequest::SharedDtor(MessageLite& self) {
  WatchDistRequest& this_ = static_cast<WatchDistRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* WatchDistRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WatchDistRequest(arena);
}
constexpr auto WatchDistRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(WatchDistRequest),
                                            alignof(WatchDistRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WatchDistRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WatchDistRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WatchDistRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WatchDistRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WatchDistRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WatchDistRequest>(), &WatchDistRequest::ByteSizeLong,
            &WatchDistRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WatchDistRequest, _impl_._cached_size_),
        false,
    },
    &WatchDistRequest::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2fdist_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WatchDistRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> WatchDistRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::WatchDistRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string node_id = 1 [json_name = "nodeId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WatchDistRequest, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node_id = 1 [json_name = "nodeId"];
    {PROTOBUF_FIELD_OFFSET(WatchDistRequest, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\7\0\0\0\0\0\0"
    "dist.v1.WatchDistRequest"
    "node_id"
  }},
};

PROTOBUF_NOINLINE void WatchDistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.WatchDistRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WatchDistRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WatchDistRequest& this_ = static_cast<const WatchDistRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WatchDistRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WatchDistRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.WatchDistRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node_id = 1 [json_name = "nodeId"];
          if (!this_._internal_node_id().empty()) {
            const std::string& _s = this_._internal_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.WatchDistRequest.node_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.WatchDistRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WatchDistRequest::ByteSizeLong(const MessageLite& base) {
          const WatchDistRequest& this_ = static_cast<const WatchDistRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WatchDistRequest::ByteSizeLong() const {
          const WatchDistRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.WatchDistRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string node_id = 1 [json_name = "nodeId"];
            if (!this_._internal_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WatchDistRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchDistRequest*>(&to_msg);
  auto& from = static_cast<const WatchDistRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.WatchDistRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchDistRequest::CopyFrom(const WatchDistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.WatchDistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchDistRequest::InternalSwap(WatchDistRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
}

::google::protobuf::Metadata WatchDistRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchDistResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::dist::v1::WatchDistResponse, _impl_._oneof_case_);
};

void WatchDistResponse::set_allocated_task(::dist::v1::ScheduleTaskEvent* task) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_event();
  if (task) {
    ::google::protobuf::Arena* submessage_arena = task->GetArena();
    if (message_arena != submessage_arena) {
      task = ::google::protobuf::internal::GetOwnedMessage(message_arena, task, submessage_arena);
    }
    set_has_task();
    _impl_.event_.task_ = task;
  }
  // @@protoc_insertion_point(field_set_allocated:dist.v1.WatchDistResponse.task)
}
WatchDistResponse::WatchDistResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.WatchDistResponse)
}
inline PROTOBUF_NDEBUG_INLINE WatchDistResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::WatchDistResponse& from_msg)
      : event_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

WatchDistResponse::WatchDistResponse(
    ::google::protobuf::Arena* arena,
    const WatchDistResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchDistResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (event_case()) {
    case EVENT_NOT_SET:
      break;
      case kTask:
        _impl_.event_.task_ = ::google::protobuf::Message::CopyConstruct<::dist::v1::ScheduleTaskEvent>(arena, *from._impl_.event_.task_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:dist.v1.WatchDistResponse)
}
inline PROTOBUF_NDEBUG_INLINE WatchDistResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : event_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void WatchDistResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WatchDistResponse::~WatchDistResponse() {
  // @@protoc_insertion_point(destructor:dist.v1.WatchDistResponse)
  SharedDtor(*this);
}
inline void WatchDistResponse::SharedDtor(MessageLite& self) {
  WatchDistResponse& this_ = static_cast<WatchDistResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_event()) {
    this_.clear_event();
  }
  this_._impl_.~Impl_();
}

void WatchDistResponse::clear_event() {
// @@protoc_insertion_point(one_of_clear_start:dist.v1.WatchDistResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (event_case()) {
    case kTask: {
      if (GetArena() == nullptr) {
        delete _impl_.event_.task_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.task_);
      }
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = EVENT_NOT_SET;
}


inline void* WatchDistResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) WatchDistResponse(arena);
}
constexpr auto WatchDistResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(WatchDistResponse),
                                            alignof(WatchDistResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull WatchDistResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_WatchDistResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &WatchDistResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<WatchDistResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &WatchDistResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<WatchDistResponse>(), &WatchDistResponse::ByteSizeLong,
            &WatchDistResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(WatchDistResponse, _impl_._cached_size_),
        false,
    },
    &WatchDistResponse::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2fdist_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* WatchDistResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> WatchDistResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::WatchDistResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .dist.v1.ScheduleTaskEvent task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(WatchDistResponse, _impl_.event_.task_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dist::v1::ScheduleTaskEvent>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void WatchDistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.WatchDistResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_event();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WatchDistResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WatchDistResponse& this_ = static_cast<const WatchDistResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WatchDistResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WatchDistResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.WatchDistResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .dist.v1.ScheduleTaskEvent task = 1 [json_name = "task"];
          if (this_.event_case() == kTask) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.event_.task_, this_._impl_.event_.task_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.WatchDistResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WatchDistResponse::ByteSizeLong(const MessageLite& base) {
          const WatchDistResponse& this_ = static_cast<const WatchDistResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WatchDistResponse::ByteSizeLong() const {
          const WatchDistResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.WatchDistResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.event_case()) {
            // .dist.v1.ScheduleTaskEvent task = 1 [json_name = "task"];
            case kTask: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.event_.task_);
              break;
            }
            case EVENT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WatchDistResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchDistResponse*>(&to_msg);
  auto& from = static_cast<const WatchDistResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.WatchDistResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_event();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kTask: {
        if (oneof_needs_init) {
          _this->_impl_.event_.task_ =
              ::google::protobuf::Message::CopyConstruct<::dist::v1::ScheduleTaskEvent>(arena, *from._impl_.event_.task_);
        } else {
          _this->_impl_.event_.task_->MergeFrom(from._internal_task());
        }
        break;
      }
      case EVENT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchDistResponse::CopyFrom(const WatchDistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.WatchDistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchDistResponse::InternalSwap(WatchDistResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.event_, other->_impl_.event_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata WatchDistResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ScheduleTaskEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ScheduleTaskEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ScheduleTaskEvent, _impl_._has_bits_);
};

ScheduleTaskEvent::ScheduleTaskEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.ScheduleTaskEvent)
}
inline PROTOBUF_NDEBUG_INLINE ScheduleTaskEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::ScheduleTaskEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ScheduleTaskEvent::ScheduleTaskEvent(
    ::google::protobuf::Arena* arena,
    const ScheduleTaskEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ScheduleTaskEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::dist::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:dist.v1.ScheduleTaskEvent)
}
inline PROTOBUF_NDEBUG_INLINE ScheduleTaskEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ScheduleTaskEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
ScheduleTaskEvent::~ScheduleTaskEvent() {
  // @@protoc_insertion_point(destructor:dist.v1.ScheduleTaskEvent)
  SharedDtor(*this);
}
inline void ScheduleTaskEvent::SharedDtor(MessageLite& self) {
  ScheduleTaskEvent& this_ = static_cast<ScheduleTaskEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.task_;
  this_._impl_.~Impl_();
}

inline void* ScheduleTaskEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ScheduleTaskEvent(arena);
}
constexpr auto ScheduleTaskEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ScheduleTaskEvent),
                                            alignof(ScheduleTaskEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ScheduleTaskEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ScheduleTaskEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ScheduleTaskEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ScheduleTaskEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ScheduleTaskEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ScheduleTaskEvent>(), &ScheduleTaskEvent::ByteSizeLong,
            &ScheduleTaskEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ScheduleTaskEvent, _impl_._cached_size_),
        false,
    },
    &ScheduleTaskEvent::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2fdist_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ScheduleTaskEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ScheduleTaskEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ScheduleTaskEvent, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::ScheduleTaskEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .dist.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ScheduleTaskEvent, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dist.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(ScheduleTaskEvent, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dist::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ScheduleTaskEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.ScheduleTaskEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ScheduleTaskEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ScheduleTaskEvent& this_ = static_cast<const ScheduleTaskEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ScheduleTaskEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ScheduleTaskEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.ScheduleTaskEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .dist.v1.Task task = 1 [json_name = "task"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.task_, this_._impl_.task_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.ScheduleTaskEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ScheduleTaskEvent::ByteSizeLong(const MessageLite& base) {
          const ScheduleTaskEvent& this_ = static_cast<const ScheduleTaskEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ScheduleTaskEvent::ByteSizeLong() const {
          const ScheduleTaskEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.ScheduleTaskEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .dist.v1.Task task = 1 [json_name = "task"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ScheduleTaskEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ScheduleTaskEvent*>(&to_msg);
  auto& from = static_cast<const ScheduleTaskEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.ScheduleTaskEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::dist::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ScheduleTaskEvent::CopyFrom(const ScheduleTaskEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.ScheduleTaskEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ScheduleTaskEvent::InternalSwap(ScheduleTaskEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata ScheduleTaskEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace dist
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_dist_2fv1_2fdist_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
