// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dist/v1/common.proto
// Protobuf C++ Version: 5.29.0

#include "dist/v1/common.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace dist {
namespace v1 {

inline constexpr Task::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::dist::v1::Task_TaskType >(0)},
        status_{static_cast< ::dist::v1::Task_TaskStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Task::Task(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskDefaultTypeInternal() {}
  union {
    Task _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskDefaultTypeInternal _Task_default_instance_;

inline constexpr ShutdownEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ShutdownEvent::ShutdownEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ShutdownEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShutdownEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShutdownEventDefaultTypeInternal() {}
  union {
    ShutdownEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShutdownEventDefaultTypeInternal _ShutdownEvent_default_instance_;

inline constexpr Node::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0u},
        status_{static_cast< ::dist::v1::Node_NodeStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Node::Node(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeDefaultTypeInternal() {}
  union {
    Node _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeDefaultTypeInternal _Node_default_instance_;

inline constexpr TaskStatusChangeEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_{nullptr},
        previous_status_{static_cast< ::dist::v1::Task_TaskStatus >(0)},
        current_status_{static_cast< ::dist::v1::Task_TaskStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TaskStatusChangeEvent::TaskStatusChangeEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskStatusChangeEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskStatusChangeEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskStatusChangeEventDefaultTypeInternal() {}
  union {
    TaskStatusChangeEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskStatusChangeEventDefaultTypeInternal _TaskStatusChangeEvent_default_instance_;

inline constexpr TaskAssignmentEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        assigned_node_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        task_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR TaskAssignmentEvent::TaskAssignmentEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskAssignmentEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskAssignmentEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskAssignmentEventDefaultTypeInternal() {}
  union {
    TaskAssignmentEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskAssignmentEventDefaultTypeInternal _TaskAssignmentEvent_default_instance_;

inline constexpr NodeStatusChangeEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_{nullptr},
        previous_status_{static_cast< ::dist::v1::Node_NodeStatus >(0)},
        current_status_{static_cast< ::dist::v1::Node_NodeStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR NodeStatusChangeEvent::NodeStatusChangeEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NodeStatusChangeEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeStatusChangeEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeStatusChangeEventDefaultTypeInternal() {}
  union {
    NodeStatusChangeEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeStatusChangeEventDefaultTypeInternal _NodeStatusChangeEvent_default_instance_;
}  // namespace v1
}  // namespace dist
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_dist_2fv1_2fcommon_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_dist_2fv1_2fcommon_2eproto = nullptr;
const ::uint32_t
    TableStruct_dist_2fv1_2fcommon_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::Node, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::Node, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::Node, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::Node, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::Node, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::Node, _impl_.status_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::Task, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::Task, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::Task, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::Task, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::Task, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::Task, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::NodeStatusChangeEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::NodeStatusChangeEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::NodeStatusChangeEvent, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::NodeStatusChangeEvent, _impl_.previous_status_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::NodeStatusChangeEvent, _impl_.current_status_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dist::v1::ShutdownEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::ShutdownEvent, _impl_.node_id_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::ShutdownEvent, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::TaskStatusChangeEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::TaskStatusChangeEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::TaskStatusChangeEvent, _impl_.task_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::TaskStatusChangeEvent, _impl_.previous_status_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::TaskStatusChangeEvent, _impl_.current_status_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::dist::v1::TaskAssignmentEvent, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::TaskAssignmentEvent, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dist::v1::TaskAssignmentEvent, _impl_.task_),
        PROTOBUF_FIELD_OFFSET(::dist::v1::TaskAssignmentEvent, _impl_.assigned_node_id_),
        0,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::dist::v1::Node)},
        {13, -1, -1, sizeof(::dist::v1::Task)},
        {26, 37, -1, sizeof(::dist::v1::NodeStatusChangeEvent)},
        {40, -1, -1, sizeof(::dist::v1::ShutdownEvent)},
        {50, 61, -1, sizeof(::dist::v1::TaskStatusChangeEvent)},
        {64, 74, -1, sizeof(::dist::v1::TaskAssignmentEvent)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::dist::v1::_Node_default_instance_._instance,
    &::dist::v1::_Task_default_instance_._instance,
    &::dist::v1::_NodeStatusChangeEvent_default_instance_._instance,
    &::dist::v1::_ShutdownEvent_default_instance_._instance,
    &::dist::v1::_TaskStatusChangeEvent_default_instance_._instance,
    &::dist::v1::_TaskAssignmentEvent_default_instance_._instance,
};
const char descriptor_table_protodef_dist_2fv1_2fcommon_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024dist/v1/common.proto\022\007dist.v1\"\203\002\n\004Node"
    "\022\016\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022\030\n\007"
    "address\030\003 \001(\tR\007address\022\022\n\004port\030\004 \001(\rR\004po"
    "rt\0220\n\006status\030\005 \001(\0162\030.dist.v1.Node.NodeSt"
    "atusR\006status\"w\n\nNodeStatus\022\033\n\027NODE_STATU"
    "S_UNSPECIFIED\020\000\022\026\n\022NODE_STATUS_ACTIVE\020\001\022"
    "\030\n\024NODE_STATUS_INACTIVE\020\002\022\032\n\026NODE_STATUS"
    "_OVERLOADED\020\003\"\312\003\n\004Task\022\016\n\002id\030\001 \001(\tR\002id\022\022"
    "\n\004name\030\002 \001(\tR\004name\022*\n\004type\030\003 \001(\0162\026.dist."
    "v1.Task.TaskTypeR\004type\0220\n\006status\030\004 \001(\0162\030"
    ".dist.v1.Task.TaskStatusR\006status\022\030\n\007payl"
    "oad\030\005 \001(\014R\007payload\"{\n\010TaskType\022\031\n\025TASK_T"
    "YPE_UNSPECIFIED\020\000\022\025\n\021TASK_TYPE_COMPUTE\020\001"
    "\022\035\n\031TASK_TYPE_DATA_PROCESSING\020\002\022\036\n\032TASK_"
    "TYPE_MACHINE_LEARNING\020\003\"\250\001\n\nTaskStatus\022\033"
    "\n\027TASK_STATUS_UNSPECIFIED\020\000\022\027\n\023TASK_STAT"
    "US_PENDING\020\001\022\027\n\023TASK_STATUS_RUNNING\020\002\022\031\n"
    "\025TASK_STATUS_COMPLETED\020\003\022\026\n\022TASK_STATUS_"
    "FAILED\020\004\022\030\n\024TASK_STATUS_CANCELED\020\005\"\276\001\n\025N"
    "odeStatusChangeEvent\022!\n\004node\030\001 \001(\0132\r.dis"
    "t.v1.NodeR\004node\022A\n\017previous_status\030\002 \001(\016"
    "2\030.dist.v1.Node.NodeStatusR\016previousStat"
    "us\022\?\n\016current_status\030\003 \001(\0162\030.dist.v1.Nod"
    "e.NodeStatusR\rcurrentStatus\"@\n\rShutdownE"
    "vent\022\027\n\007node_id\030\001 \001(\tR\006nodeId\022\026\n\006reason\030"
    "\002 \001(\tR\006reason\"\276\001\n\025TaskStatusChangeEvent\022"
    "!\n\004task\030\001 \001(\0132\r.dist.v1.TaskR\004task\022A\n\017pr"
    "evious_status\030\002 \001(\0162\030.dist.v1.Task.TaskS"
    "tatusR\016previousStatus\022\?\n\016current_status\030"
    "\003 \001(\0162\030.dist.v1.Task.TaskStatusR\rcurrent"
    "Status\"b\n\023TaskAssignmentEvent\022!\n\004task\030\001 "
    "\001(\0132\r.dist.v1.TaskR\004task\022(\n\020assigned_nod"
    "e_id\030\002 \001(\tR\016assignedNodeIdB{\n\013com.dist.v"
    "1B\013CommonProtoP\001Z\"github.com/pplmx/pb/di"
    "st/v1;distv1\242\002\003DXX\252\002\007Dist.V1\312\002\007Dist\\V1\342\002"
    "\023Dist\\V1\\GPBMetadata\352\002\010Dist::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_dist_2fv1_2fcommon_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_dist_2fv1_2fcommon_2eproto = {
    false,
    false,
    1439,
    descriptor_table_protodef_dist_2fv1_2fcommon_2eproto,
    "dist/v1/common.proto",
    &descriptor_table_dist_2fv1_2fcommon_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_dist_2fv1_2fcommon_2eproto::offsets,
    file_level_enum_descriptors_dist_2fv1_2fcommon_2eproto,
    file_level_service_descriptors_dist_2fv1_2fcommon_2eproto,
};
namespace dist {
namespace v1 {
const ::google::protobuf::EnumDescriptor* Node_NodeStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dist_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_dist_2fv1_2fcommon_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Node_NodeStatus_internal_data_[] = {
    262144u, 0u, };
bool Node_NodeStatus_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Node_NodeStatus Node::NODE_STATUS_UNSPECIFIED;
constexpr Node_NodeStatus Node::NODE_STATUS_ACTIVE;
constexpr Node_NodeStatus Node::NODE_STATUS_INACTIVE;
constexpr Node_NodeStatus Node::NODE_STATUS_OVERLOADED;
constexpr Node_NodeStatus Node::NodeStatus_MIN;
constexpr Node_NodeStatus Node::NodeStatus_MAX;
constexpr int Node::NodeStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Task_TaskType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dist_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_dist_2fv1_2fcommon_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t Task_TaskType_internal_data_[] = {
    262144u, 0u, };
bool Task_TaskType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Task_TaskType Task::TASK_TYPE_UNSPECIFIED;
constexpr Task_TaskType Task::TASK_TYPE_COMPUTE;
constexpr Task_TaskType Task::TASK_TYPE_DATA_PROCESSING;
constexpr Task_TaskType Task::TASK_TYPE_MACHINE_LEARNING;
constexpr Task_TaskType Task::TaskType_MIN;
constexpr Task_TaskType Task::TaskType_MAX;
constexpr int Task::TaskType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Task_TaskStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_dist_2fv1_2fcommon_2eproto);
  return file_level_enum_descriptors_dist_2fv1_2fcommon_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Task_TaskStatus_internal_data_[] = {
    393216u, 0u, };
bool Task_TaskStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Task_TaskStatus Task::TASK_STATUS_UNSPECIFIED;
constexpr Task_TaskStatus Task::TASK_STATUS_PENDING;
constexpr Task_TaskStatus Task::TASK_STATUS_RUNNING;
constexpr Task_TaskStatus Task::TASK_STATUS_COMPLETED;
constexpr Task_TaskStatus Task::TASK_STATUS_FAILED;
constexpr Task_TaskStatus Task::TASK_STATUS_CANCELED;
constexpr Task_TaskStatus Task::TaskStatus_MIN;
constexpr Task_TaskStatus Task::TaskStatus_MAX;
constexpr int Task::TaskStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class Node::_Internal {
 public:
};

Node::Node(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.Node)
}
inline PROTOBUF_NDEBUG_INLINE Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::Node& from_msg)
      : id_(arena, from.id_),
        name_(arena, from.name_),
        address_(arena, from.address_),
        _cached_size_{0} {}

Node::Node(
    ::google::protobuf::Arena* arena,
    const Node& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Node* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, port_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:dist.v1.Node)
}
inline PROTOBUF_NDEBUG_INLINE Node::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        name_(arena),
        address_(arena),
        _cached_size_{0} {}

inline void Node::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::status_));
}
Node::~Node() {
  // @@protoc_insertion_point(destructor:dist.v1.Node)
  SharedDtor(*this);
}
inline void Node::SharedDtor(MessageLite& self) {
  Node& this_ = static_cast<Node&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.address_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Node::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Node(arena);
}
constexpr auto Node::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Node),
                                            alignof(Node));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Node::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Node_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Node::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Node>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Node::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Node>(), &Node::ByteSizeLong,
            &Node::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Node, _impl_._cached_size_),
        false,
    },
    &Node::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2fcommon_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Node::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 34, 2> Node::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::Node>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.name_)}},
    // string address = 3 [json_name = "address"];
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.address_)}},
    // uint32 port = 4 [json_name = "port"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Node, _impl_.port_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.port_)}},
    // .dist.v1.Node.NodeStatus status = 5 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Node, _impl_.status_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Node, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string address = 3 [json_name = "address"];
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 port = 4 [json_name = "port"];
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .dist.v1.Node.NodeStatus status = 5 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(Node, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\14\2\4\7\0\0\0\0"
    "dist.v1.Node"
    "id"
    "name"
    "address"
  }},
};

PROTOBUF_NOINLINE void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.Node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.address_.ClearToEmpty();
  ::memset(&_impl_.port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Node::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Node& this_ = static_cast<const Node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Node::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.Node)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.Node.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.Node.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string address = 3 [json_name = "address"];
          if (!this_._internal_address().empty()) {
            const std::string& _s = this_._internal_address();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.Node.address");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // uint32 port = 4 [json_name = "port"];
          if (this_._internal_port() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_port(), target);
          }

          // .dist.v1.Node.NodeStatus status = 5 [json_name = "status"];
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                5, this_._internal_status(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.Node)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Node::ByteSizeLong(const MessageLite& base) {
          const Node& this_ = static_cast<const Node&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Node::ByteSizeLong() const {
          const Node& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.Node)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string name = 2 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string address = 3 [json_name = "address"];
            if (!this_._internal_address().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_address());
            }
            // uint32 port = 4 [json_name = "port"];
            if (this_._internal_port() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_port());
            }
            // .dist.v1.Node.NodeStatus status = 5 [json_name = "status"];
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Node::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Node*>(&to_msg);
  auto& from = static_cast<const Node&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.Node)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (from._internal_port() != 0) {
    _this->_impl_.port_ = from._impl_.port_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Node::InternalSwap(Node* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Node, _impl_.status_)
      + sizeof(Node::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(Node, _impl_.port_)>(
          reinterpret_cast<char*>(&_impl_.port_),
          reinterpret_cast<char*>(&other->_impl_.port_));
}

::google::protobuf::Metadata Node::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Task::_Internal {
 public:
};

Task::Task(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.Task)
}
inline PROTOBUF_NDEBUG_INLINE Task::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::Task& from_msg)
      : id_(arena, from.id_),
        name_(arena, from.name_),
        payload_(arena, from.payload_),
        _cached_size_{0} {}

Task::Task(
    ::google::protobuf::Arena* arena,
    const Task& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Task* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, status_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::status_));

  // @@protoc_insertion_point(copy_constructor:dist.v1.Task)
}
inline PROTOBUF_NDEBUG_INLINE Task::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        name_(arena),
        payload_(arena),
        _cached_size_{0} {}

inline void Task::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::status_));
}
Task::~Task() {
  // @@protoc_insertion_point(destructor:dist.v1.Task)
  SharedDtor(*this);
}
inline void Task::SharedDtor(MessageLite& self) {
  Task& this_ = static_cast<Task&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.payload_.Destroy();
  this_._impl_.~Impl_();
}

inline void* Task::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Task(arena);
}
constexpr auto Task::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Task),
                                            alignof(Task));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Task::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Task_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Task::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Task>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Task::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Task>(), &Task::ByteSizeLong,
            &Task::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Task, _impl_._cached_size_),
        false,
    },
    &Task::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2fcommon_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Task::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 27, 2> Task::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::Task>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.name_)}},
    // .dist.v1.Task.TaskType type = 3 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Task, _impl_.type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.type_)}},
    // .dist.v1.Task.TaskStatus status = 4 [json_name = "status"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Task, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.status_)}},
    // bytes payload = 5 [json_name = "payload"];
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Task, _impl_.payload_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .dist.v1.Task.TaskType type = 3 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .dist.v1.Task.TaskStatus status = 4 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes payload = 5 [json_name = "payload"];
    {PROTOBUF_FIELD_OFFSET(Task, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\2\4\0\0\0\0\0"
    "dist.v1.Task"
    "id"
    "name"
  }},
};

PROTOBUF_NOINLINE void Task::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.Task)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.payload_.ClearToEmpty();
  ::memset(&_impl_.type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Task::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Task& this_ = static_cast<const Task&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Task::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Task& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.Task)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1 [json_name = "id"];
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.Task.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2 [json_name = "name"];
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.Task.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // .dist.v1.Task.TaskType type = 3 [json_name = "type"];
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_type(), target);
          }

          // .dist.v1.Task.TaskStatus status = 4 [json_name = "status"];
          if (this_._internal_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_status(), target);
          }

          // bytes payload = 5 [json_name = "payload"];
          if (!this_._internal_payload().empty()) {
            const std::string& _s = this_._internal_payload();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.Task)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Task::ByteSizeLong(const MessageLite& base) {
          const Task& this_ = static_cast<const Task&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Task::ByteSizeLong() const {
          const Task& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.Task)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1 [json_name = "id"];
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string name = 2 [json_name = "name"];
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // bytes payload = 5 [json_name = "payload"];
            if (!this_._internal_payload().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_payload());
            }
            // .dist.v1.Task.TaskType type = 3 [json_name = "type"];
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
            // .dist.v1.Task.TaskStatus status = 4 [json_name = "status"];
            if (this_._internal_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Task::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Task*>(&to_msg);
  auto& from = static_cast<const Task&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.Task)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  if (from._internal_status() != 0) {
    _this->_impl_.status_ = from._impl_.status_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Task::CopyFrom(const Task& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.Task)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Task::InternalSwap(Task* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Task, _impl_.status_)
      + sizeof(Task::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(Task, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata Task::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeStatusChangeEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NodeStatusChangeEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_._has_bits_);
};

NodeStatusChangeEvent::NodeStatusChangeEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.NodeStatusChangeEvent)
}
inline PROTOBUF_NDEBUG_INLINE NodeStatusChangeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::NodeStatusChangeEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

NodeStatusChangeEvent::NodeStatusChangeEvent(
    ::google::protobuf::Arena* arena,
    const NodeStatusChangeEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NodeStatusChangeEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::dist::v1::Node>(
                              arena, *from._impl_.node_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, previous_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, previous_status_),
           offsetof(Impl_, current_status_) -
               offsetof(Impl_, previous_status_) +
               sizeof(Impl_::current_status_));

  // @@protoc_insertion_point(copy_constructor:dist.v1.NodeStatusChangeEvent)
}
inline PROTOBUF_NDEBUG_INLINE NodeStatusChangeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NodeStatusChangeEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_),
           0,
           offsetof(Impl_, current_status_) -
               offsetof(Impl_, node_) +
               sizeof(Impl_::current_status_));
}
NodeStatusChangeEvent::~NodeStatusChangeEvent() {
  // @@protoc_insertion_point(destructor:dist.v1.NodeStatusChangeEvent)
  SharedDtor(*this);
}
inline void NodeStatusChangeEvent::SharedDtor(MessageLite& self) {
  NodeStatusChangeEvent& this_ = static_cast<NodeStatusChangeEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.node_;
  this_._impl_.~Impl_();
}

inline void* NodeStatusChangeEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NodeStatusChangeEvent(arena);
}
constexpr auto NodeStatusChangeEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NodeStatusChangeEvent),
                                            alignof(NodeStatusChangeEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NodeStatusChangeEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NodeStatusChangeEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NodeStatusChangeEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NodeStatusChangeEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NodeStatusChangeEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NodeStatusChangeEvent>(), &NodeStatusChangeEvent::ByteSizeLong,
            &NodeStatusChangeEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_._cached_size_),
        false,
    },
    &NodeStatusChangeEvent::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2fcommon_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NodeStatusChangeEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> NodeStatusChangeEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::NodeStatusChangeEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dist.v1.Node node = 1 [json_name = "node"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_.node_)}},
    // .dist.v1.Node.NodeStatus previous_status = 2 [json_name = "previousStatus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeStatusChangeEvent, _impl_.previous_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_.previous_status_)}},
    // .dist.v1.Node.NodeStatus current_status = 3 [json_name = "currentStatus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(NodeStatusChangeEvent, _impl_.current_status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_.current_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dist.v1.Node node = 1 [json_name = "node"];
    {PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_.node_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dist.v1.Node.NodeStatus previous_status = 2 [json_name = "previousStatus"];
    {PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_.previous_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .dist.v1.Node.NodeStatus current_status = 3 [json_name = "currentStatus"];
    {PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_.current_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dist::v1::Node>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NodeStatusChangeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.NodeStatusChangeEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_ != nullptr);
    _impl_.node_->Clear();
  }
  ::memset(&_impl_.previous_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.current_status_) -
      reinterpret_cast<char*>(&_impl_.previous_status_)) + sizeof(_impl_.current_status_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NodeStatusChangeEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NodeStatusChangeEvent& this_ = static_cast<const NodeStatusChangeEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NodeStatusChangeEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NodeStatusChangeEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.NodeStatusChangeEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .dist.v1.Node node = 1 [json_name = "node"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.node_, this_._impl_.node_->GetCachedSize(), target,
                stream);
          }

          // .dist.v1.Node.NodeStatus previous_status = 2 [json_name = "previousStatus"];
          if (this_._internal_previous_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_previous_status(), target);
          }

          // .dist.v1.Node.NodeStatus current_status = 3 [json_name = "currentStatus"];
          if (this_._internal_current_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_current_status(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.NodeStatusChangeEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NodeStatusChangeEvent::ByteSizeLong(const MessageLite& base) {
          const NodeStatusChangeEvent& this_ = static_cast<const NodeStatusChangeEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NodeStatusChangeEvent::ByteSizeLong() const {
          const NodeStatusChangeEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.NodeStatusChangeEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .dist.v1.Node node = 1 [json_name = "node"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.node_);
            }
          }
           {
            // .dist.v1.Node.NodeStatus previous_status = 2 [json_name = "previousStatus"];
            if (this_._internal_previous_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_previous_status());
            }
            // .dist.v1.Node.NodeStatus current_status = 3 [json_name = "currentStatus"];
            if (this_._internal_current_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_current_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NodeStatusChangeEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeStatusChangeEvent*>(&to_msg);
  auto& from = static_cast<const NodeStatusChangeEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.NodeStatusChangeEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_ != nullptr);
    if (_this->_impl_.node_ == nullptr) {
      _this->_impl_.node_ =
          ::google::protobuf::Message::CopyConstruct<::dist::v1::Node>(arena, *from._impl_.node_);
    } else {
      _this->_impl_.node_->MergeFrom(*from._impl_.node_);
    }
  }
  if (from._internal_previous_status() != 0) {
    _this->_impl_.previous_status_ = from._impl_.previous_status_;
  }
  if (from._internal_current_status() != 0) {
    _this->_impl_.current_status_ = from._impl_.current_status_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeStatusChangeEvent::CopyFrom(const NodeStatusChangeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.NodeStatusChangeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeStatusChangeEvent::InternalSwap(NodeStatusChangeEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_.current_status_)
      + sizeof(NodeStatusChangeEvent::_impl_.current_status_)
      - PROTOBUF_FIELD_OFFSET(NodeStatusChangeEvent, _impl_.node_)>(
          reinterpret_cast<char*>(&_impl_.node_),
          reinterpret_cast<char*>(&other->_impl_.node_));
}

::google::protobuf::Metadata NodeStatusChangeEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ShutdownEvent::_Internal {
 public:
};

ShutdownEvent::ShutdownEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.ShutdownEvent)
}
inline PROTOBUF_NDEBUG_INLINE ShutdownEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::ShutdownEvent& from_msg)
      : node_id_(arena, from.node_id_),
        reason_(arena, from.reason_),
        _cached_size_{0} {}

ShutdownEvent::ShutdownEvent(
    ::google::protobuf::Arena* arena,
    const ShutdownEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ShutdownEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:dist.v1.ShutdownEvent)
}
inline PROTOBUF_NDEBUG_INLINE ShutdownEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_id_(arena),
        reason_(arena),
        _cached_size_{0} {}

inline void ShutdownEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ShutdownEvent::~ShutdownEvent() {
  // @@protoc_insertion_point(destructor:dist.v1.ShutdownEvent)
  SharedDtor(*this);
}
inline void ShutdownEvent::SharedDtor(MessageLite& self) {
  ShutdownEvent& this_ = static_cast<ShutdownEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.node_id_.Destroy();
  this_._impl_.reason_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ShutdownEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ShutdownEvent(arena);
}
constexpr auto ShutdownEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ShutdownEvent),
                                            alignof(ShutdownEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ShutdownEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ShutdownEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ShutdownEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ShutdownEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ShutdownEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ShutdownEvent>(), &ShutdownEvent::ByteSizeLong,
            &ShutdownEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ShutdownEvent, _impl_._cached_size_),
        false,
    },
    &ShutdownEvent::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2fcommon_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ShutdownEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> ShutdownEvent::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::ShutdownEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string reason = 2 [json_name = "reason"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ShutdownEvent, _impl_.reason_)}},
    // string node_id = 1 [json_name = "nodeId"];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ShutdownEvent, _impl_.node_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node_id = 1 [json_name = "nodeId"];
    {PROTOBUF_FIELD_OFFSET(ShutdownEvent, _impl_.node_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 2 [json_name = "reason"];
    {PROTOBUF_FIELD_OFFSET(ShutdownEvent, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\7\6\0\0\0\0\0"
    "dist.v1.ShutdownEvent"
    "node_id"
    "reason"
  }},
};

PROTOBUF_NOINLINE void ShutdownEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.ShutdownEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_id_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ShutdownEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ShutdownEvent& this_ = static_cast<const ShutdownEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ShutdownEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ShutdownEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.ShutdownEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string node_id = 1 [json_name = "nodeId"];
          if (!this_._internal_node_id().empty()) {
            const std::string& _s = this_._internal_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.ShutdownEvent.node_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string reason = 2 [json_name = "reason"];
          if (!this_._internal_reason().empty()) {
            const std::string& _s = this_._internal_reason();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.ShutdownEvent.reason");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.ShutdownEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ShutdownEvent::ByteSizeLong(const MessageLite& base) {
          const ShutdownEvent& this_ = static_cast<const ShutdownEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ShutdownEvent::ByteSizeLong() const {
          const ShutdownEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.ShutdownEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string node_id = 1 [json_name = "nodeId"];
            if (!this_._internal_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_node_id());
            }
            // string reason = 2 [json_name = "reason"];
            if (!this_._internal_reason().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_reason());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ShutdownEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ShutdownEvent*>(&to_msg);
  auto& from = static_cast<const ShutdownEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.ShutdownEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node_id().empty()) {
    _this->_internal_set_node_id(from._internal_node_id());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShutdownEvent::CopyFrom(const ShutdownEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.ShutdownEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ShutdownEvent::InternalSwap(ShutdownEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_id_, &other->_impl_.node_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
}

::google::protobuf::Metadata ShutdownEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TaskStatusChangeEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TaskStatusChangeEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_._has_bits_);
};

TaskStatusChangeEvent::TaskStatusChangeEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.TaskStatusChangeEvent)
}
inline PROTOBUF_NDEBUG_INLINE TaskStatusChangeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::TaskStatusChangeEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TaskStatusChangeEvent::TaskStatusChangeEvent(
    ::google::protobuf::Arena* arena,
    const TaskStatusChangeEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskStatusChangeEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::dist::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, previous_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, previous_status_),
           offsetof(Impl_, current_status_) -
               offsetof(Impl_, previous_status_) +
               sizeof(Impl_::current_status_));

  // @@protoc_insertion_point(copy_constructor:dist.v1.TaskStatusChangeEvent)
}
inline PROTOBUF_NDEBUG_INLINE TaskStatusChangeEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void TaskStatusChangeEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_),
           0,
           offsetof(Impl_, current_status_) -
               offsetof(Impl_, task_) +
               sizeof(Impl_::current_status_));
}
TaskStatusChangeEvent::~TaskStatusChangeEvent() {
  // @@protoc_insertion_point(destructor:dist.v1.TaskStatusChangeEvent)
  SharedDtor(*this);
}
inline void TaskStatusChangeEvent::SharedDtor(MessageLite& self) {
  TaskStatusChangeEvent& this_ = static_cast<TaskStatusChangeEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.task_;
  this_._impl_.~Impl_();
}

inline void* TaskStatusChangeEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TaskStatusChangeEvent(arena);
}
constexpr auto TaskStatusChangeEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TaskStatusChangeEvent),
                                            alignof(TaskStatusChangeEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TaskStatusChangeEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TaskStatusChangeEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TaskStatusChangeEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TaskStatusChangeEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TaskStatusChangeEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TaskStatusChangeEvent>(), &TaskStatusChangeEvent::ByteSizeLong,
            &TaskStatusChangeEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_._cached_size_),
        false,
    },
    &TaskStatusChangeEvent::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2fcommon_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TaskStatusChangeEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> TaskStatusChangeEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::TaskStatusChangeEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .dist.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_.task_)}},
    // .dist.v1.Task.TaskStatus previous_status = 2 [json_name = "previousStatus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskStatusChangeEvent, _impl_.previous_status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_.previous_status_)}},
    // .dist.v1.Task.TaskStatus current_status = 3 [json_name = "currentStatus"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TaskStatusChangeEvent, _impl_.current_status_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_.current_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dist.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .dist.v1.Task.TaskStatus previous_status = 2 [json_name = "previousStatus"];
    {PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_.previous_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .dist.v1.Task.TaskStatus current_status = 3 [json_name = "currentStatus"];
    {PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_.current_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dist::v1::Task>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void TaskStatusChangeEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.TaskStatusChangeEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  ::memset(&_impl_.previous_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.current_status_) -
      reinterpret_cast<char*>(&_impl_.previous_status_)) + sizeof(_impl_.current_status_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskStatusChangeEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskStatusChangeEvent& this_ = static_cast<const TaskStatusChangeEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskStatusChangeEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskStatusChangeEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.TaskStatusChangeEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .dist.v1.Task task = 1 [json_name = "task"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.task_, this_._impl_.task_->GetCachedSize(), target,
                stream);
          }

          // .dist.v1.Task.TaskStatus previous_status = 2 [json_name = "previousStatus"];
          if (this_._internal_previous_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_previous_status(), target);
          }

          // .dist.v1.Task.TaskStatus current_status = 3 [json_name = "currentStatus"];
          if (this_._internal_current_status() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                3, this_._internal_current_status(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.TaskStatusChangeEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskStatusChangeEvent::ByteSizeLong(const MessageLite& base) {
          const TaskStatusChangeEvent& this_ = static_cast<const TaskStatusChangeEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskStatusChangeEvent::ByteSizeLong() const {
          const TaskStatusChangeEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.TaskStatusChangeEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // .dist.v1.Task task = 1 [json_name = "task"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_);
            }
          }
           {
            // .dist.v1.Task.TaskStatus previous_status = 2 [json_name = "previousStatus"];
            if (this_._internal_previous_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_previous_status());
            }
            // .dist.v1.Task.TaskStatus current_status = 3 [json_name = "currentStatus"];
            if (this_._internal_current_status() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_current_status());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskStatusChangeEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskStatusChangeEvent*>(&to_msg);
  auto& from = static_cast<const TaskStatusChangeEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.TaskStatusChangeEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::dist::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  if (from._internal_previous_status() != 0) {
    _this->_impl_.previous_status_ = from._impl_.previous_status_;
  }
  if (from._internal_current_status() != 0) {
    _this->_impl_.current_status_ = from._impl_.current_status_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskStatusChangeEvent::CopyFrom(const TaskStatusChangeEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.TaskStatusChangeEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskStatusChangeEvent::InternalSwap(TaskStatusChangeEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_.current_status_)
      + sizeof(TaskStatusChangeEvent::_impl_.current_status_)
      - PROTOBUF_FIELD_OFFSET(TaskStatusChangeEvent, _impl_.task_)>(
          reinterpret_cast<char*>(&_impl_.task_),
          reinterpret_cast<char*>(&other->_impl_.task_));
}

::google::protobuf::Metadata TaskStatusChangeEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TaskAssignmentEvent::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TaskAssignmentEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TaskAssignmentEvent, _impl_._has_bits_);
};

TaskAssignmentEvent::TaskAssignmentEvent(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dist.v1.TaskAssignmentEvent)
}
inline PROTOBUF_NDEBUG_INLINE TaskAssignmentEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::dist::v1::TaskAssignmentEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        assigned_node_id_(arena, from.assigned_node_id_) {}

TaskAssignmentEvent::TaskAssignmentEvent(
    ::google::protobuf::Arena* arena,
    const TaskAssignmentEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskAssignmentEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::dist::v1::Task>(
                              arena, *from._impl_.task_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:dist.v1.TaskAssignmentEvent)
}
inline PROTOBUF_NDEBUG_INLINE TaskAssignmentEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        assigned_node_id_(arena) {}

inline void TaskAssignmentEvent::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.task_ = {};
}
TaskAssignmentEvent::~TaskAssignmentEvent() {
  // @@protoc_insertion_point(destructor:dist.v1.TaskAssignmentEvent)
  SharedDtor(*this);
}
inline void TaskAssignmentEvent::SharedDtor(MessageLite& self) {
  TaskAssignmentEvent& this_ = static_cast<TaskAssignmentEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.assigned_node_id_.Destroy();
  delete this_._impl_.task_;
  this_._impl_.~Impl_();
}

inline void* TaskAssignmentEvent::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) TaskAssignmentEvent(arena);
}
constexpr auto TaskAssignmentEvent::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TaskAssignmentEvent),
                                            alignof(TaskAssignmentEvent));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull TaskAssignmentEvent::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_TaskAssignmentEvent_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &TaskAssignmentEvent::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<TaskAssignmentEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &TaskAssignmentEvent::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<TaskAssignmentEvent>(), &TaskAssignmentEvent::ByteSizeLong,
            &TaskAssignmentEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(TaskAssignmentEvent, _impl_._cached_size_),
        false,
    },
    &TaskAssignmentEvent::kDescriptorMethods,
    &descriptor_table_dist_2fv1_2fcommon_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* TaskAssignmentEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 52, 2> TaskAssignmentEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskAssignmentEvent, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dist::v1::TaskAssignmentEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string assigned_node_id = 2 [json_name = "assignedNodeId"];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TaskAssignmentEvent, _impl_.assigned_node_id_)}},
    // .dist.v1.Task task = 1 [json_name = "task"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TaskAssignmentEvent, _impl_.task_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .dist.v1.Task task = 1 [json_name = "task"];
    {PROTOBUF_FIELD_OFFSET(TaskAssignmentEvent, _impl_.task_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string assigned_node_id = 2 [json_name = "assignedNodeId"];
    {PROTOBUF_FIELD_OFFSET(TaskAssignmentEvent, _impl_.assigned_node_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dist::v1::Task>()},
  }}, {{
    "\33\0\20\0\0\0\0\0"
    "dist.v1.TaskAssignmentEvent"
    "assigned_node_id"
  }},
};

PROTOBUF_NOINLINE void TaskAssignmentEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:dist.v1.TaskAssignmentEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.assigned_node_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.task_ != nullptr);
    _impl_.task_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskAssignmentEvent::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskAssignmentEvent& this_ = static_cast<const TaskAssignmentEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskAssignmentEvent::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskAssignmentEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:dist.v1.TaskAssignmentEvent)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .dist.v1.Task task = 1 [json_name = "task"];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.task_, this_._impl_.task_->GetCachedSize(), target,
                stream);
          }

          // string assigned_node_id = 2 [json_name = "assignedNodeId"];
          if (!this_._internal_assigned_node_id().empty()) {
            const std::string& _s = this_._internal_assigned_node_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "dist.v1.TaskAssignmentEvent.assigned_node_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:dist.v1.TaskAssignmentEvent)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskAssignmentEvent::ByteSizeLong(const MessageLite& base) {
          const TaskAssignmentEvent& this_ = static_cast<const TaskAssignmentEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskAssignmentEvent::ByteSizeLong() const {
          const TaskAssignmentEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:dist.v1.TaskAssignmentEvent)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string assigned_node_id = 2 [json_name = "assignedNodeId"];
            if (!this_._internal_assigned_node_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_assigned_node_id());
            }
          }
           {
            // .dist.v1.Task task = 1 [json_name = "task"];
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskAssignmentEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskAssignmentEvent*>(&to_msg);
  auto& from = static_cast<const TaskAssignmentEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:dist.v1.TaskAssignmentEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_assigned_node_id().empty()) {
    _this->_internal_set_assigned_node_id(from._internal_assigned_node_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.task_ != nullptr);
    if (_this->_impl_.task_ == nullptr) {
      _this->_impl_.task_ =
          ::google::protobuf::Message::CopyConstruct<::dist::v1::Task>(arena, *from._impl_.task_);
    } else {
      _this->_impl_.task_->MergeFrom(*from._impl_.task_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskAssignmentEvent::CopyFrom(const TaskAssignmentEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dist.v1.TaskAssignmentEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskAssignmentEvent::InternalSwap(TaskAssignmentEvent* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.assigned_node_id_, &other->_impl_.assigned_node_id_, arena);
  swap(_impl_.task_, other->_impl_.task_);
}

::google::protobuf::Metadata TaskAssignmentEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace dist
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_dist_2fv1_2fcommon_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
